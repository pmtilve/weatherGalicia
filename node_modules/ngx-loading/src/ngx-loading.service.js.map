{"version":3,"sources":["../../src/ngx-loading.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAY,MAAA,EAAQ,QAAA,EAAS,MAAO,eAAA,CAAgB;AAE7D,OAAO,EAAkB,aAAA,EAAc,MAAO,sBAAA,CAAuB;AAGrE;IAGI,8BAAuB,MAAsB;QAAtB,WAAM,GAAN,MAAM,CAAgB;QACzC,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,IAAI,aAAa,EAAE,CAAC;IACvD,CAAC;IAQL,2BAAC;AAAD,CAbA,AAaC;;AAPM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,mCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,eAAe,EAAG,EAAE,EAAG,EAAC;CACjG,EAF6F,CAE7F,CAAC","file":"ngx-loading.service.js","sourceRoot":"","sourcesContent":["import { Injectable, Inject, Optional } from '@angular/core';\r\n\r\nimport { ILoadingConfig, LoadingConfig } from './ngx-loading.config';\r\n\r\n\r\nexport class LoadingConfigService {\r\n    public loadingConfig: ILoadingConfig;\r\n\r\n    constructor(   private config: ILoadingConfig) {\r\n        this.loadingConfig = config || new LoadingConfig();\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: ['loadingConfig', ] }, ]},\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}